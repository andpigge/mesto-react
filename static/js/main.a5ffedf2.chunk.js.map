{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/сurrentUserContext.js","components/Card.js","images/icons/profile-btn-edit.svg","contexts/cardListContext.js","utils/Api.js","utils/constants.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/gif/preloaderProfileImg.gif","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","owner","link","name","likes","_id","useContext","onClick","length","some","like","type","CardListContext","CONECT_SERVER","TOKEN","COHORT_ID","PATHS","user","cards","cardLikes","baseUrl","headers","paths","this","res","ok","json","Promise","reject","status","path","fetch","then","_checkResponse","method","body","JSON","stringify","dataItem","_serverConnectionGet","about","_serverConnectionSend","cardId","_serverConnectionEdit","avatarUrl","avatar","authorization","Main","onEditAvatar","onEditProfile","onAddPlace","setCardList","cardList","style","backgroundImage","profileEditImg","map","Footer","PopupWithForm","title","isOpen","onClose","children","onSubmit","ImagePopup","nameSelector","EditProfilePopup","onUpdateUser","useState","profileName","profileDoes","profileValue","setProfileValue","useEffect","handleChange","e","state","previousValue","Object","assign","value","preventDefault","id","placeholder","minLength","maxLength","required","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","ref","current","AddPlacePopup","placeName","setPlaceName","placeImg","setPlaceImg","App","selectedCard","setselectedCard","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isShowPopupImg","setShowPopupImg","gifPreloader","currentUser","setCurrentUser","closeAllPopups","all","Api","getInitialUser","getInitialCards","document","addEventListener","key","Provider","idCard","deleteLike","newCard","previousСard","putAppendLike","addLike","deleteCard","filter","patchUpdateProfile","newUser","patchUpdateUserAvatar","postAddCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5ffedf2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5f0f2709.svg\";","import logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n      <header className='header page__position-center page__header'>\n        <a href=\"/index\" target=\"_self\" className=\"header__link\">\n          <img src={logo} alt=\"Место Россия\" className=\"header__logo\" />\n        </a>\n      </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React, { useContext } from 'react';\n\n// Контекст\nimport { CurrentUserContext } from '../contexts/сurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  // Деструктуризация\n  const { owner, link, name, likes } = card;\n\n  // Контекст user\n  const { _id } = useContext(CurrentUserContext);\n\n  const toggleClassIcon = () => {\n    // Является ли карточка моей\n    return owner._id === _id ? 'card-place__delete-btn' : 'card-place__delete-btn card-place__delete-btn_display_none';\n  };\n\n  // При монтировании есть ли на карточке лайк\n  const isLiked = () => {\n    // Немного оптимизации. Если к примеру все карточки не будут иметь лайков, то и проверять их незачем\n    if (likes.length > 0) {\n      // Лайкнул карточку или нет\n      const isLiked = likes.some(like => like._id === _id);\n      return isLiked ? 'card-place__like-btn card-place__like-btn_active' : 'card-place__like-btn';\n    }\n    return 'card-place__like-btn';\n  };\n\n  return (\n    <>\n      <li className=\"place__item\">\n        <div className=\"card-place\">\n          <button className={ toggleClassIcon() } onClick={() => onCardDelete(card)}></button>\n          <img src={link} alt={name} className=\"card-place__img\" onClick={() => onCardClick(name, link)} />\n          <h2 className=\"card-place__title\">\n          {name}\n          </h2>\n          <div className=\"card-place__likes\">\n          <button className={ isLiked() } type=\"button\" onClick={() => onCardLike(card)}></button>\n          <span className=\"card-place__counter\">{ likes.length }</span>\n          </div>\n        </div>\n      </li>\n    </>\n    );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/profile-btn-edit.1e29eae2.svg\";","import React from 'react';\n\nexport const CardListContext = React.createContext();\n","import {apiServeMesto} from './constants.js';\r\nconst {CONECT_SERVER, TOKEN, COHORT_ID, PATHS} = apiServeMesto;\r\n\r\nclass Api {\r\n  #baseUrl\r\n  #headers\r\n  #pathUser\r\n  #pathCards\r\n  #cardLikes\r\n  constructor({baseUrl, headers, paths: {user, cards, cardLikes}}) {\r\n    this.#baseUrl = baseUrl;\r\n    this.#headers = headers;\r\n    this.#pathUser = user;\r\n    this.#pathCards = cards;\r\n    this.#cardLikes = cardLikes;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _serverConnectionGet(path) {\r\n    return fetch(`${this.#baseUrl}/${path}`, {\r\n      headers: this.#headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  _serverConnectionSend(path, method, body) {\r\n    return fetch(`${this.#baseUrl}/${path}`, {\r\n      method,\r\n      headers: this.#headers,\r\n      body: JSON.stringify(body)\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n  _serverConnectionEdit(path, method, dataItem) {\r\n    return fetch(`${this.#baseUrl}/${path}/${dataItem}`, {\r\n      method,\r\n      headers: this.#headers\r\n    })\r\n    .then(this._checkResponse);\r\n  }\r\n\r\n\r\n\r\n  getInitialCards() {\r\n    return this._serverConnectionGet(this.#pathCards);\r\n  }\r\n\r\n  getInitialUser() {\r\n    return this._serverConnectionGet(this.#pathUser);\r\n  }\r\n\r\n  patchUpdateProfile(name, about) {\r\n    return this._serverConnectionSend(this.#pathUser, 'PATCH', {\r\n      name,\r\n      about\r\n    });\r\n  }\r\n\r\n  postAddCard(name, link) {\r\n    return this._serverConnectionSend(this.#pathCards, 'POST', {\r\n      name,\r\n      link\r\n    });\r\n  }\r\n\r\n\r\n  deleteCard(cardId) {\r\n    return this._serverConnectionEdit(this.#pathCards, 'DELETE', cardId);\r\n  }\r\n\r\n  putAppendLike(cardId) {\r\n    return this._serverConnectionEdit(this.#cardLikes, 'PUT', cardId);\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return this._serverConnectionEdit(this.#cardLikes, 'DELETE', cardId);\r\n  }\r\n\r\n  patchUpdateUserAvatar(avatarUrl) {\r\n    return this._serverConnectionSend(`${this.#pathUser}/avatar`, 'PATCH', {avatar: avatarUrl});\r\n  }\r\n}\r\n\r\nexport default new Api({\r\n  baseUrl: `${CONECT_SERVER}/${COHORT_ID}`,\r\n  headers: {\r\n    authorization: TOKEN,\r\n    'Content-Type': 'application/json'\r\n  },\r\n  paths: PATHS\r\n});\r\n","// Для каждого отдельного сервера, свой apiServe объект\r\nconst apiServeMesto = {\r\n  CONECT_SERVER: 'https://mesto.nomoreparties.co/v1',\r\n  TOKEN: '8e942f57-cf63-4abe-b1a4-d7c8e2f5f3b4',\r\n  COHORT_ID: 'cohort-23',\r\n  PATHS: {\r\n    user: 'users/me',\r\n    cards: 'cards',\r\n    cardLikes: 'cards/likes'\r\n  }\r\n};\r\n\r\nexport {apiServeMesto};\r\n","import React, { useContext } from 'react';\n\nimport Card from './Card.js';\n\nimport profileEditImg from '../images/icons/profile-btn-edit.svg';\n\n// Контекст\nimport { CurrentUserContext } from '../contexts/сurrentUserContext';\nimport { CardListContext } from '../contexts/cardListContext';\n\nimport Api from '../utils/Api';\n\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick, setCardList, onCardLike, onCardDelete}) {\n\n  // Контекст\n  const { avatar, about, name, ...user } = useContext(CurrentUserContext);\n  // В будущем возможно карточки будут выводиться еще куда-нибудь\n  const cardList = useContext(CardListContext);\n\n  // const handleCardLike = card => {\n  //   // true лайк стоит\n  //   const isLiked = card.likes.some(like => like._id === user._id);\n\n  //   isLiked ? deleteLike(card._id) : addLike(card._id);\n  // };\n\n  // const handleCardDelete = card => {\n  //   Api.deleteCard(card._id)\n  //     .then(newCard => {\n  //       setCardList(state => {\n  //         return state.filter(previousСard => {\n  //           return previousСard._id !== card._id;\n  //         });\n  //       });\n  //   });\n  // };\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile content__position-center content__profile\">\n        <div className=\"profile__img-container\">\n          <img src={avatar} alt=\"Портрет\" className=\"profile__img\" style={{backgroundImage: `url(${avatar})`}} />\n          <img src={profileEditImg} alt=\"Кнопка редактирования\" className=\"profile__edit-img\" onClick={onEditAvatar} />\n        </div>\n        <div className=\"profile__about\">\n          <div className=\"profile__container-text\">\n            <h1 className=\"profile__title-name\">{about}</h1>\n            <p className=\"profile__subtitle-does\">{name}</p>\n          </div>\n          <button className=\"profile__edit-btn\" type=\"button\" onClick={onEditProfile}></button>\n        </div>\n        <button className=\"profile__add-card-place\" type=\"button\" onClick={onAddPlace}></button>\n      </section>\n\n      <section className=\"place content__position-center content__place\">\n        <ul className=\"place__list\">\n          {\n            cardList.length > 0 ?\n            cardList.map(card => {\n              // Передаю уникальный ключ, React сам подставит его.\n              return <Card card={card} key={card._id} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\n            }) :\n            // Это прелоадер\n            <div className='plase__result'></div>\n          }\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\r\n    return (\r\n      <footer className=\"footer page__position-center page__footer\">\r\n        <p className=\"footer__text-copyright\">\r\n          &copy; 2020 Mesto Russia\r\n        </p>\r\n      </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","function PopupWithForm({title, name, isOpen, onClose, children, onSubmit}) {\n  return (\n    <>\n      <div className={!isOpen ? `popup ${name}` : `popup ${name} popup_opened`}>\n        <div className=\"popup__container\">\n          <button className=\"popup__btn\" type=\"button\" onClick={onClose}></button>\n          <form className=\"popup__form\" name={name} onSubmit={onSubmit}>\n            <h2 className=\"popup__form-title\">\n              {title}\n            </h2>\n            {children}\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PopupWithForm;\n","function ImagePopup({card: {name, link}, nameSelector, isOpen, onClose}) {\n  return (\n    <div className={!isOpen ? `popup ${nameSelector}` : `popup ${nameSelector} popup_opened`}>\n      <div className=\"popup__container popup__container_review_img\">\n        <button className=\"popup__btn\" type=\"button\" onClick={onClose}></button>\n        <figure className=\"popup__img-container\">\n          <img src={link} className=\"popup__img\" alt={name} />\n          <figcaption className=\"popup__img-text\">\n            {name}\n          </figcaption>\n        </figure>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n// Контекст\nimport { CurrentUserContext } from '../contexts/сurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  // Так как обьект state обновляется не весь, нужно получать предедущий state. Проще реализовать два отдельных состояния, чтобы они не зависели друг от друга, и не пришлось получать предедущий state. В ООП подходе может быть только один объект state.\n  // const [name, setName] = useState('Жак-Ив Кусто');\n  // const [description, setDescription] = useState('Исследователь океана');\n\n  const [profileValue, setProfileValue] = useState({\n    profileName: '',\n    profileDoes: ''\n  });\n  const {profileName, profileDoes} = profileValue;\n\n  // console.log(profileName, profileDoes)\n\n  // Контекст\n  const { about, name } = useContext(CurrentUserContext);\n\n  // Вторым параметром передал переменные зависимости, те что используются в useEffect\n  useEffect(() => {\n    setProfileValue({\n      profileName: about,\n      profileDoes: name\n    });\n  }, [about, name]);\n\n  // Немного усложнил задачу, чтобы потренироваться, понять как реализуется задача по-другому\n  const handleChange = e => {\n    setProfileValue(state => {\n      const previousValue = Object.assign({}, state);\n      previousValue[e.target.name] = e.target.value;\n      return previousValue;\n    });\n  }\n\n  const handleSbmit = e => {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser(profileValue);\n  };\n\n  return (\n    <PopupWithForm title={'Редактировать профиль'} name={'popup_edit_profile'} isOpen={isOpen} onClose={onClose} onSubmit={handleSbmit} children={(\n      <>\n        <label className=\"popup__form-label\">\n          {/* С помощью value и onChange создал управляющий компонент, где содержимое берется из state компонента */}\n          <input type=\"text\" className=\"popup__form-input popup__form-input_value_name\" id=\"profile-name-input\" placeholder=\"Имя\" name=\"profileName\" minLength=\"2\" maxLength=\"40\" required value={profileName} onChange={handleChange} />\n          <span className=\"popup__error-message profile-name-input-error\"></span>\n        </label>\n        <label className=\"popup__form-label\">\n          <input type=\"text\" className=\"popup__form-input popup__form-input_value_does\" id=\"profile-does-input\" placeholder=\"Деятельность\" name=\"profileDoes\" minLength=\"2\" maxLength=\"200\" required value={profileDoes} onChange={handleChange} />\n          <span className=\"popup__error-message profile-does-input-error\"></span>\n        </label>\n        <button className=\"button-popup button-popup_edit_profile\" type=\"submit\">Сохранить</button>\n      </>\n    )} />\n  );\n}\n\nexport default EditProfilePopup;\n","import React, { useRef } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  // Использую рефы\n  const inputRef = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    });\n  };\n\n  return (\n    <PopupWithForm title={'Обновить аватар'} name={'popup_edit_img'} isOpen={isOpen} onClose={onClose} children={(\n      <>\n        <label className=\"popup__form-label\">\n          <input type=\"url\" className=\"popup__form-input\" id=\"url-img-edit\" placeholder=\"Ссылка на картинку\" name=\"imgEdit\" required ref={inputRef} />\n          <span className=\"popup__error-message url-img-edit-error\"></span>\n        </label>\n        <button className=\"button-popup button-popup_edit_img\" type=\"submit\" onClick={handleSubmit}>Сохранить</button>\n      </>\n    )} />\n  );\n}\n\nexport default EditAvatarPopup;\n","import React, { useState } from 'react';\n\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  const [placeName, setPlaceName] = useState('');\n  const [placeImg, setPlaceImg] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddPlace ({\n      name: placeName,\n      link: placeImg\n    });\n  };\n\n  return (\n    <PopupWithForm title={'Новое место'} name={'popup_add_card'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} children={(\n      <>\n        <label className=\"popup__form-label\">\n          <input type=\"text\" className=\"popup__form-input popup__form-input_value_place\" id=\"place-name-input\" placeholder=\"Название\" name=\"placeName\" minLength=\"2\" maxLength=\"30\" required value={placeName} onChange={e => setPlaceName(e.target.value)} />\n          <span className=\"popup__error-message place-name-input-error\"></span>\n        </label>\n        <label className=\"popup__form-label\">\n          <input type=\"url\" className=\"popup__form-input popup__form-input_value_img\" placeholder=\"Ссылка на картинку\" id=\"place-img-input\" name=\"placeImg\" required value={placeImg} onChange={e => setPlaceImg(e.target.value)} />\n          <span className=\"popup__error-message place-img-input-error\"></span>\n        </label>\n        <button className=\"button-popup button-popup_add_card\" type=\"submit\">Создать</button>\n      </>\n    )} />\n  );\n}\n\nexport default AddPlacePopup;\n","export default __webpack_public_path__ + \"static/media/preloaderProfileImg.e8e535d6.gif\";","import React, { useEffect } from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nimport Api from '../utils/Api';\n\n// GIF preloader\nimport gifPreloader from '../images/gif/preloaderProfileImg.gif';\n\n// Контекст\nimport { CurrentUserContext } from '../contexts/сurrentUserContext';\nimport { CardListContext } from '../contexts/cardListContext';\n\nfunction App() {\n\n  const [selectedCard, setselectedCard] = React.useState({});\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isShowPopupImg, setShowPopupImg] = React.useState(false);\n\n  //* Данные с сервера\n  const [currentUser, setCurrentUser] = React.useState({\n    about: 'Загрузка...',\n    name: 'Пожалуйста подождите',\n    avatar: gifPreloader\n  });\n\n  const [cardList, setCardList] = React.useState([]);\n  //*\n\n  useEffect(() => {\n    // Данные должны подгружаться одновремено\n    Promise.all([Api.getInitialUser(), Api.getInitialCards()])\n      .then(([ user, cardList ]) => {\n        setCurrentUser(user);\n        setCardList(cardList);\n        // console.log(user)\n        // console.log(cardList)\n      });\n  }, []);\n\n  const closePopupTouchEsc = e => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  };\n\n  document.addEventListener('keydown', closePopupTouchEsc);\n  // if ((isEditProfilePopupOpen && isAddPlacePopupOpen && isEditAvatarPopupOpen && isShowPopupImg) === false) {\n  //   document.removeEventListener('keydown', closePopupTouchEsc);\n  // }\n\n  const handleUpdateUser = ({ profileDoes, profileName }) => {\n    Api.patchUpdateProfile(profileDoes, profileName)\n      .then(newUser => {\n        setCurrentUser(newUser);\n      });\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = ({ avatar }) => {\n    Api.patchUpdateUserAvatar(avatar)\n      .then(newUser => {\n        setCurrentUser(newUser);\n      });\n    closeAllPopups();\n  };\n\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    Api.postAddCard(name, link)\n      .then(newCard => {\n        setCardList([newCard, ...cardList]);\n      });\n    closeAllPopups();\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setShowPopupImg(false);\n  }\n\n  function handleCardClick(name, link) {\n    setselectedCard({name, link});\n    setShowPopupImg(true);\n  }\n\n  //* Card\n  const addLike = idCard => {\n    Api.putAppendLike(idCard)\n      .then(newCard => {\n        setCardList(state => {\n          return state.map(previousСard => {\n            return previousСard._id === idCard ? newCard : previousСard;\n          });\n        });\n      });\n  };\n\n  const deleteLike = idCard => {\n    Api.deleteLike(idCard)\n      .then(newCard => {\n        setCardList(state => {\n          return state.map(previousСard => {\n            return previousСard._id === idCard ? newCard : previousСard;\n          });\n        });\n      });\n  };\n\n  const handleCardLike = card => {\n    // true лайк стоит\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n    isLiked ? deleteLike(card._id) : addLike(card._id);\n  };\n  //*\n\n  const handleCardDelete = card => {\n    Api.deleteCard(card._id)\n      .then(newCard => {\n        setCardList(state => {\n          return state.filter(previousСard => {\n            return previousСard._id !== card._id;\n          });\n        });\n    });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={ currentUser } >\n      <CardListContext.Provider value={ cardList }>\n        <Header />\n        <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick} setCardList={setCardList} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n        <PopupWithForm title={'Вы уверены?'} name={'popup_remove_card'} children={(\n          <>\n            <button className=\"button-popup button-popup_delete_card\" type=\"submit\">Да</button>\n          </>\n        )} />\n        <ImagePopup card={selectedCard} name={'popup_edit_img'} isOpen={isShowPopupImg} onClose={closeAllPopups} />\n      </CardListContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}